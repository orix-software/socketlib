{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>This lib is used to manage socket for Orix</p>"},{"location":"assembly/","title":"Assembly","text":""},{"location":"assembly/#assembly","title":"Assembly","text":""},{"location":"assembly/#bind","title":"bind","text":"<p>Input</p> <ul> <li>X Register : Socket id</li> <li>Accumulator : Low byte of port</li> <li>Y Register : High byte of port</li> </ul> <p>Returns</p> <ul> <li> <p>Accumulator : XX </p> </li> <li> <p>X Register : XX </p> </li> <li> <p>Y Register : XX </p> </li> </ul>"},{"location":"assembly/#socket_close","title":"socket_close","text":"<p>Description</p> <p>Close socket</p> <p>Input</p> <ul> <li>X Register : The socket id</li> </ul>"},{"location":"assembly/#socket_open_test","title":"socket_open_test","text":""},{"location":"assembly/#socket_recv","title":"socket_recv","text":"<p>Description</p> <p>Get socket data</p> <p>Input</p> <ul> <li>X Register : Socket id</li> <li>Accumulator : Low ptr to store the buffer</li> <li>Y Register : High ptr to store the buffer</li> </ul>"},{"location":"assembly/#socket","title":"socket","text":"<p>Description</p> <p>Open a socket</p> <p>Returns</p> <ul> <li> <p>X Register : The socket id</p> </li> <li> <p>Accumulator : if != -1 socket id</p> </li> </ul> <p>Example</p> <pre><code> ; or use Macro (socket.mac) SOCKET domain, type, protocol\nlda #$00\nldx #AF_INET\nldy #SOCK_STREAM\njsr socket\n</code></pre>"},{"location":"assembly/#socket_send","title":"socket_send","text":"<p>Description</p> <p>Send data into socket</p> <p>Input</p> <ul> <li>X Register : Socket id</li> <li>Accumulator : Low ptr of the buffer</li> <li>Y Register : High ptr of the buffer</li> </ul> <p>Returns</p> <ul> <li> <p>Accumulator : Low byte of the length</p> </li> <li> <p>X Register : High byte of the length</p> </li> <li> <p>Y Register : Error type</p> </li> </ul>"},{"location":"c/","title":"C","text":""},{"location":"c/#c","title":"C","text":"<p>const char str_debug_socket_recv[27] = \"[libsocket/socket_recv.s] \"; const char str_debug_socket_recv_waiting_buffer[25] = \"Waiting recv buffer ... \"; const char str_debug_socket_recv_received_buffer[30] = \"Received recv buffer bytes : \"; const char str_debug_socket_send[27] = \"[libsocket/socket_send.s] \"; const char str_debug_socket_send_waiting_send_buffer[38] = \"Waiting to have buffer send empty ...\";</p>"},{"location":"2024.1/assembly/","title":"Assembly","text":""},{"location":"2024.1/assembly/#assembly","title":"Assembly","text":""},{"location":"2024.1/assembly/#bind","title":"bind","text":"<p>Input</p> <ul> <li>X Register : Socket id</li> <li>Accumulator : Low byte of port</li> <li>Y Register : High byte of port</li> </ul> <p>Returns</p> <ul> <li> <p>Accumulator : XX </p> </li> <li> <p>X Register : XX </p> </li> <li> <p>Y Register : XX </p> </li> </ul>"},{"location":"2024.1/assembly/#socket_close","title":"socket_close","text":"<p>Description</p> <p>Close socket</p> <p>Input</p> <ul> <li>X Register : The socket id</li> </ul>"},{"location":"2024.1/assembly/#socket_open_test","title":"socket_open_test","text":""},{"location":"2024.1/assembly/#socket_recv","title":"socket_recv","text":"<p>Description</p> <p>Get socket data</p> <p>Input</p> <ul> <li>X Register : Socket id</li> <li>Accumulator : Low ptr to store the buffer</li> <li>Y Register : High ptr to store the buffer</li> </ul>"},{"location":"2024.1/assembly/#socket","title":"socket","text":"<p>Description</p> <p>Open a socket</p> <p>Returns</p> <ul> <li> <p>X Register : The socket id</p> </li> <li> <p>Accumulator : if != -1 socket id</p> </li> </ul> <p>Example</p> <pre><code> ; or use Macro (socket.mac) SOCKET domain, type, protocol\nlda #$00\nldx #AF_INET\nldy #SOCK_STREAM\njsr socket\n</code></pre>"},{"location":"2024.1/assembly/#socket_send","title":"socket_send","text":"<p>Description</p> <p>Send data into socket</p> <p>Input</p> <ul> <li>X Register : Socket id</li> <li>Accumulator : Low ptr of the buffer</li> <li>Y Register : High ptr of the buffer</li> </ul> <p>Returns</p> <ul> <li> <p>Accumulator : Low byte of the length</p> </li> <li> <p>X Register : High byte of the length</p> </li> <li> <p>Y Register : Error type</p> </li> </ul>"},{"location":"2024.1/c/","title":"C","text":""},{"location":"2024.1/c/#c","title":"C","text":"<p>const char str_debug_socket_recv[27] = \"[libsocket/socket_recv.s] \"; const char str_debug_socket_recv_waiting_buffer[25] = \"Waiting recv buffer ... \"; const char str_debug_socket_recv_received_buffer[30] = \"Received recv buffer bytes : \"; const char str_debug_socket_send[27] = \"[libsocket/socket_send.s] \"; const char str_debug_socket_send_waiting_send_buffer[38] = \"Waiting to have buffer send empty ...\";</p>"}]}